{"ast":null,"code":"var _jsxFileName = \"/Users/raimundogallino/Desktop/ReactYoutubeApi hooks copy/my-app/src/components/VideoPlayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SearchBar from './Searchbar';\nimport VideoList from './VideoList';\nimport youtube from '../apis/youtube';\nimport { Link } from 'react-router-dom';\nimport '../style/videodetail.css';\n/*\n{ !details ? ( \n\n            <>\n            <VideoPlayer \n                handleFormSubmit={handleSubmit}\n                handleVideoDetails={handleVideoDetails}\n                handleVideoSelect={handleVideoSelect}\n                video={selectedVideo}\n                videos={videos}\n                details={details}\n            />\n            </>\n            ) : (\n            <>\n            <MoreDetails \n                handleVideoDetails={handleVideoDetails}\n                handleVideoSelect={handleVideoSelect}\n                video={selectedVideo}\n                videos={relatedVideos}\n                details={details}\n            />\n            </>\n            \n            )}\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VideoPlayer = () => {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [videosBackup, setVideosBackup] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [details, setDetails] = useState(false);\n  const [relatedVideos, setRelatedVideos] = useState([]); //const [videosWached, setVideosWached] = useState(0);\n\n  const handleSubmit = async textFromSearchBar => {\n    const response = await youtube.get('/search', {\n      params: {\n        q: textFromSearchBar\n      }\n    });\n    setVideos(response.data.items.slice(1));\n    setVideosBackup(response.data.items);\n    setSelectedVideo(response.data.items[0]);\n    setRelatedVideos(handleRelatedVideos(response.data.items[0]));\n  };\n\n  const handleRelatedVideos = async selectedVideo => {\n    console.log(selectedVideo.id.videoId);\n    const relatedVideos = await youtube.get('/search?', {\n      params: {\n        relatedToVideoId: selectedVideo.id.videoId,\n        maxResults: 3\n      }\n    });\n    setRelatedVideos(relatedVideos.data.items);\n  };\n\n  const handleVideoSelect = video => {\n    let videoList = [...videosBackup];\n    let index = videoList.indexOf(video);\n    videoList.splice(index, 1);\n    setSelectedVideo(video);\n    setVideos(videoList);\n    handleRelatedVideos(video);\n    console.log(\"HANDLE VIDEOOO\", video);\n  };\n\n  const handleVideoDetails = () => {\n    setDetails(!details);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      handleFormSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-repro\",\n        children: [selectedVideo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video\",\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              src: videoSrc,\n              allowFullScreen: true,\n              title: \"Video player\",\n              className: \"video-player\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: video.snippet.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Search any video...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: videos.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: '/details',\n              state: {\n                handleVideoDetails: handleVideoDetails,\n                handleVideoSelect: handleVideoSelect,\n                video: selectedVideo,\n                videos: relatedVideos,\n                details: details\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleVideoDetails(),\n              className: \"details-button\",\n              children: \"Video details \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(VideoList, {\n        handleVideoSelect: handleVideoSelect,\n        videos: videos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VideoPlayer, \"NcCX/m+FtLlyq9P7ELTeYUnA58I=\");\n\n_c = VideoPlayer;\nexport default VideoPlayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"sources":["/Users/raimundogallino/Desktop/ReactYoutubeApi hooks copy/my-app/src/components/VideoPlayer.js"],"names":["React","useState","SearchBar","VideoList","youtube","Link","VideoPlayer","videos","setVideos","videosBackup","setVideosBackup","selectedVideo","setSelectedVideo","details","setDetails","relatedVideos","setRelatedVideos","handleSubmit","textFromSearchBar","response","get","params","q","data","items","slice","handleRelatedVideos","console","log","id","videoId","relatedToVideoId","maxResults","handleVideoSelect","video","videoList","index","indexOf","splice","handleVideoDetails","videoSrc","snippet","title","length","pathname","state"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport SearchBar from './Searchbar';\nimport VideoList from './VideoList';\nimport youtube from '../apis/youtube';\nimport {Link} from 'react-router-dom';\nimport '../style/videodetail.css';\n\n\n\n\n/*\n{ !details ? ( \n\n            <>\n            <VideoPlayer \n                handleFormSubmit={handleSubmit}\n                handleVideoDetails={handleVideoDetails}\n                handleVideoSelect={handleVideoSelect}\n                video={selectedVideo}\n                videos={videos}\n                details={details}\n            />\n            </>\n            ) : (\n            <>\n            <MoreDetails \n                handleVideoDetails={handleVideoDetails}\n                handleVideoSelect={handleVideoSelect}\n                video={selectedVideo}\n                videos={relatedVideos}\n                details={details}\n            />\n            </>\n            \n            )}\n*/\n\n\nconst VideoPlayer = () => {\n\n    const [videos, setVideos] = useState([]);\n    const [videosBackup, setVideosBackup] = useState([]);\n    const [selectedVideo, setSelectedVideo] = useState(null);\n    const [details, setDetails] = useState(false);\n    const [relatedVideos, setRelatedVideos] = useState([]);\n    //const [videosWached, setVideosWached] = useState(0);\n\n\n    const handleSubmit = async (textFromSearchBar) => {\n        const response = await youtube.get('/search', {\n            params: {\n                q: textFromSearchBar\n            }\n        })\n        setVideos(response.data.items.slice(1));\n        setVideosBackup(response.data.items);\n        setSelectedVideo(response.data.items[0]);\n        setRelatedVideos(handleRelatedVideos(response.data.items[0]));\n    };\n\n    const handleRelatedVideos = async (selectedVideo) => {\n        console.log(selectedVideo.id.videoId);\n        const relatedVideos = await youtube.get('/search?', {\n            params: {\n                relatedToVideoId: selectedVideo.id.videoId,\n                maxResults: 3,\n            }\n        })\n        setRelatedVideos(relatedVideos.data.items);\n\n    }\n\n    const handleVideoSelect = (video) => {\n        let videoList = [...videosBackup];\n        let index = videoList.indexOf(video)\n        videoList.splice(index, 1)\n        setSelectedVideo(video);\n        setVideos(videoList);\n        handleRelatedVideos(video);\n        console.log(\"HANDLE VIDEOOO\", video)\n    }\n\n    const handleVideoDetails = () => {\n        setDetails(!details);\n\n    }\n    return (\n        <>\n        <SearchBar handleFormSubmit={handleSubmit}/>\n        <div className=\"videos\">\n            <div className=\"video-repro\">\n            {selectedVideo ? (       \n                <>\n                <div className=\"video\">\n                  <iframe src={videoSrc} allowFullScreen title=\"Video player\" className=\"video-player\" />\n                </div>\n                \n                <h2 className=\"title\">{video.snippet.title}</h2>\n                </>\n                ) : (\n                    <div>\n                        <h1>Search any video...</h1>\n                        <br></br>\n                    </div>\n                )}\n                <div className=\"details\">\n                    {videos.length === 0 ? <div></div> :\n\n                    <Link to={{ pathname: '/details', \n                    state : {\n                            handleVideoDetails : handleVideoDetails,\n                            handleVideoSelect : handleVideoSelect,\n                            video : selectedVideo,\n                            videos : relatedVideos,\n                            details : details\n                    }}}>\n                    <button onClick={ () => handleVideoDetails()} className=\"details-button\">Video details </button>\n                    </Link>}\n                </div>\n            </div>\n            <VideoList handleVideoSelect={handleVideoSelect} videos={videos}/>\n        </div>\n        </>\n    )\n}\nexport default VideoPlayer;\n"]},"metadata":{},"sourceType":"module"}