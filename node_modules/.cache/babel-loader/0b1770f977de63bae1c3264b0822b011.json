{"ast":null,"code":"var _jsxFileName = \"/Users/raimundogallino/Desktop/ReactYoutubeApi hooks copy/my-app/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport youtube from '../apis/youtube';\nimport VideoPlayer from './VideoPlayer';\nimport logo from '../assets/youTubeLogoGif.gif';\nimport MoreDetails from './MoreDetails';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport \"../style/app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [videos, setVideos] = useState([]);\n  const [videosBackup, setVideosBackup] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [details, setDetails] = useState(false);\n  const [relatedVideos, setRelatedVideos] = useState([]);\n  const [wachedVideos, setWachedVideos] = useState([]);\n  const [videosWachedCounter, setVideosWachedCounter] = useState(0);\n  const id = selectedVideo.id.videoId;\n  useState();\n\n  const handleSubmit = async textFromSearchBar => {\n    const response = await youtube.get('/search', {\n      params: {\n        q: textFromSearchBar\n      }\n    });\n    setSelectedVideo(response.data.items[0]);\n    setVideosBackup(response.data.items);\n    setVideos(response.data.items.slice(1));\n    setRelatedVideos(handleRelatedVideos(response.data.items[0]));\n  };\n\n  const handleRelatedVideos = async selectedVideo => {\n    // Requesting related videos\n    console.log(selectedVideo.id.videoId);\n    const relatedVideos = await youtube.get('/search?', {\n      params: {\n        relatedToVideoId: selectedVideo.id.videoId,\n        maxResults: 5\n      }\n    }); // Cleaning incomplete response data\n\n    let cleanedResponse = [];\n    relatedVideos.data.items.forEach(element => {\n      if (element.snippet !== undefined) {\n        cleanedResponse.push(element);\n      }\n    });\n    console.log(cleanedResponse);\n    setRelatedVideos(cleanedResponse.slice(0, 3));\n  };\n\n  const handleVideoSelect = video => {\n    let videoList = [...videosBackup];\n    let index = videoList.indexOf(video);\n    videoList.splice(index, 1);\n    setSelectedVideo(video);\n    setVideos(videoList);\n    handleRelatedVideos(video);\n    console.log(\"VIDEO BACKUP LIST\", videosBackup);\n  };\n\n  const handleVideoDetails = () => {\n    setDetails(!details);\n  };\n\n  const handleVideosWached = () => {\n    if (wachedVideos.includes(id) === false) {\n      setWachedVideos(wachedVideos.push(id));\n      setVideosWachedCounter(videosWachedCounter + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parent\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/videoplayer\",\n          element: /*#__PURE__*/_jsxDEV(VideoPlayer, {\n            handleFormSubmit: handleSubmit,\n            handleVideoDetails: handleVideoDetails,\n            handleVideoSelect: handleVideoSelect,\n            handleVideosWached: handleVideosWached,\n            video: selectedVideo,\n            videos: videos,\n            details: details,\n            videosWachedCounter: videosWachedCounter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/details\",\n          element: /*#__PURE__*/_jsxDEV(MoreDetails, {\n            handleVideoDetails: handleVideoDetails,\n            handleVideoSelect: handleVideoSelect,\n            handleVideosWached: handleVideosWached,\n            video: selectedVideo,\n            videos: relatedVideos,\n            details: details,\n            videosWachedCounter: videosWachedCounter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"dfCVoupozV+v9BqzCAkHBcZc71k=\");\n\n_c = App;\n\nconst Header = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        height: '100px',\n        justifyContent: 'center'\n      },\n      src: logo,\n      alt: \"youtube logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Header;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");","map":{"version":3,"sources":["/Users/raimundogallino/Desktop/ReactYoutubeApi hooks copy/my-app/src/components/App.js"],"names":["React","useState","youtube","VideoPlayer","logo","MoreDetails","BrowserRouter","Router","Route","Routes","App","videos","setVideos","videosBackup","setVideosBackup","selectedVideo","setSelectedVideo","details","setDetails","relatedVideos","setRelatedVideos","wachedVideos","setWachedVideos","videosWachedCounter","setVideosWachedCounter","id","videoId","handleSubmit","textFromSearchBar","response","get","params","q","data","items","slice","handleRelatedVideos","console","log","relatedToVideoId","maxResults","cleanedResponse","forEach","element","snippet","undefined","push","handleVideoSelect","video","videoList","index","indexOf","splice","handleVideoDetails","handleVideosWached","includes","Header","height","justifyContent"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport youtube from '../apis/youtube';\nimport VideoPlayer from './VideoPlayer';\nimport logo from '../assets/youTubeLogoGif.gif';\nimport MoreDetails from './MoreDetails';\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\n\nimport \"../style/app.css\"\n\n\nexport default function App () {\n    \n\n    const [videos, setVideos] = useState([]);\n    const [videosBackup, setVideosBackup] = useState([]);\n    const [selectedVideo, setSelectedVideo] = useState(null);\n    const [details, setDetails] = useState(false);\n    const [relatedVideos, setRelatedVideos] = useState([]);\n    const [wachedVideos, setWachedVideos] = useState([]);\n    const [videosWachedCounter, setVideosWachedCounter] = useState(0);\n\n    const id = selectedVideo.id.videoId\n    useState()\n\n\n    const handleSubmit = async (textFromSearchBar) => {\n        const response = await youtube.get('/search', {\n            params: {\n                q: textFromSearchBar\n            }\n        })\n        setSelectedVideo(response.data.items[0]);\n        setVideosBackup(response.data.items);\n        setVideos(response.data.items.slice(1));\n        setRelatedVideos(handleRelatedVideos(response.data.items[0]));\n    };\n\n    const handleRelatedVideos = async (selectedVideo) => {\n\n        // Requesting related videos\n        console.log(selectedVideo.id.videoId);\n        const relatedVideos = await youtube.get('/search?', {\n            params: {\n                relatedToVideoId: selectedVideo.id.videoId,\n                maxResults: 5,\n            }\n        })\n\n        // Cleaning incomplete response data\n        let cleanedResponse = [];\n        relatedVideos.data.items.forEach(element => {\n            if (element.snippet !== undefined) {\n                cleanedResponse.push(element);\n            }\n        });\n        console.log(cleanedResponse);\n        setRelatedVideos(cleanedResponse.slice(0, 3));\n    }\n\n    const handleVideoSelect = (video) => {\n        let videoList = [...videosBackup];\n        let index = videoList.indexOf(video)\n        videoList.splice(index, 1);\n        setSelectedVideo(video);\n        setVideos(videoList);\n        handleRelatedVideos(video);\n        console.log(\"VIDEO BACKUP LIST\", videosBackup)\n    }\n\n    const handleVideoDetails = () => {\n        setDetails(!details);\n    }\n\n    const handleVideosWached = () => {\n        if ( wachedVideos.includes(id) === false) {\n            setWachedVideos(wachedVideos.push(id))\n            setVideosWachedCounter(videosWachedCounter + 1)\n        }\n    }\n\n    return (\n        <Router>\n        <div className='parent'>\n            <Header/>\n            <Routes>\n            <Route path=\"/videoplayer\" element={<VideoPlayer\n                handleFormSubmit={handleSubmit}\n                handleVideoDetails={handleVideoDetails}\n                handleVideoSelect={handleVideoSelect}\n                handleVideosWached={handleVideosWached}\n                video={selectedVideo}\n                videos={videos}\n                details={details}\n                videosWachedCounter={videosWachedCounter}\n            />}/>\n            <Route path=\"/details\" element={<MoreDetails \n                handleVideoDetails={handleVideoDetails}\n                handleVideoSelect={handleVideoSelect}\n                handleVideosWached={handleVideosWached}\n                video={selectedVideo}\n                videos={relatedVideos}\n                details={details}\n                videosWachedCounter={videosWachedCounter}\n            />}/>\n            </Routes>\n        </div>\n        </Router>\n    )\n}\n\nconst Header = () => {\n    return (\n        <div className= \"header\">\n            <img style={{height:'100px',justifyContent:'center'}} src={logo} alt=\"youtube logo\"/>\n        </div>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}